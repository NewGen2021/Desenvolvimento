# Generated by Django 3.2.6 on 2021-10-01 20:06

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
from django.core.serializers import base, python
from django.core.management import call_command

def load_fixture(apps, schema_editor):
    # Save the old _get_model() function
    old_get_model = python._get_model

    # Define new _get_model() function here, which utilizes the apps argument to
    # get the historical version of a model. This piece of code is directly stolen
    # from django.core.serializers.python._get_model, unchanged. However, here it
    # has a different context, specifically, the apps variable.
    def _get_model(model_identifier):
        try:
            return apps.get_model(model_identifier)
        except (LookupError, TypeError):
            raise base.DeserializationError("Invalid model identifier: '%s'" % model_identifier)

    # Replace the _get_model() function on the module, so loaddata can utilize it.
    python._get_model = _get_model

    try:
        # Call loaddata command
        call_command('loaddata', 'tests/fixures/cria_coworking.json')
    finally:
        # Restore old _get_model() function
        python._get_model = old_get_model

def get_operations():
    operations = [
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=128)),
                ('cnpj', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=40)),
                ('telefone', models.CharField(max_length=20)),
                ('cep', models.CharField(max_length=12)),
                ('logradouro', models.CharField(max_length=45)),
                ('numero', models.IntegerField()),
                ('bairro', models.CharField(max_length=35)),
                ('cidade', models.CharField(max_length=30)),
                ('estado', models.CharField(max_length=2)),
                ('database', models.CharField(max_length=128, blank=True, null=True)),
                ('domain', models.ForeignKey(blank=True, db_column='domain', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='domains.domain')),
                ('plano', models.CharField(max_length=30, blank=True, null=True)),
                ('validade_plano', models.DateTimeField(blank=True, null=True))
            ],
            options={
                'db_table': 'administrador',
            },
        )
    ]
    if settings.AUTOMATIC_TEST:
        operations.append(migrations.RunPython(load_fixture))
    return operations

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('domains', '0002_manual_migration'),
    ]

    operations = get_operations()

# if settings.AUTOMATIC_TEST:
#     call_command('loaddata', 'tests/fixures/cria_coworking.json')