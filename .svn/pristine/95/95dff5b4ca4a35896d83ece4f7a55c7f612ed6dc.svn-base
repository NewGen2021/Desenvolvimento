{% extends base_template %}
{% load static %}
{% load i18n %}
{% load mathfilters %}
{% load hosts %}

{% block title %}{% translate "Agendar horário" %}{% endblock %}

{% block css %}

<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
<!-- CALENDAR CSS -->
<link href="{% static 'css/fullcalendar.css' %}" rel="stylesheet" />

<!-- COUNTER -->
<link rel="stylesheet" href="{% static 'css/counter.css' %}">

<style>

#calendar {
    max-width: 1100px;
    margin: 0 auto;
}

/* .fc-timegrid-col .fc-day .fc-day-mon .fc-day-today Classes elemento today dia*/
/* fc-daygrid-day fc-day fc-day-mon fc-day-today  Classes elemento today mês*/
/* .fc-timegrid-col {background-color: white !important;} */
/* .fc-day-today {background-color: white !important;} */
/* 
.fc-past{background-color:red;} */

.blog .carousel-indicators {
	left: 0;
	top: auto;
    bottom: -40px;

}

/* The colour of the indicators */
.blog .carousel-indicators li {
    background: #a3a3a3;
    border-radius: 50%;
    width: 8px;
    height: 8px;
}

.blog .carousel-indicators .active {
background: #707070;
}
</style>
{% endblock css %}

{% block content %}
<section id="escolher_espaco" style='padding-top: 0.5%; padding-bottom: 0%; margin-top: 8%;'>
<div class="container">
    <div class="row">
        <button class="btn {{ button_color }}" type="button" data-toggle="collapse" data-target="#collapseEscolherSala"
            aria-expanded="true" aria-controls="collapseEscolherSala">
            {% translate "Escolher " %}{{tipo_espaco}}
        </button>
    </div>
    <div class="row blog">
        <div class="col-md-12">
            <hr style='margin-bottom: 7px;'>
            <div class="collapse" id="collapseEscolherSala">
                <div id="blogCarousel" class="carousel slide" data-ride="carousel">
    
                    <ol class="carousel-indicators">
                        {% for page in pages %}
                        <li data-target="#blogCarousel" data-slide-to="{{page.number|sub:1}}" {% if not page.has_previous %}
                            class="active" {% endif %}></li>
                        {% endfor %}
                    </ol>
    
                    <!-- Carousel items -->
                    <div class="carousel-inner" style="margin-bottom: 5%;">
    
                        {% for page in pages %}
                        <div class="carousel-item {% if not page.has_previous %} active {% endif %}">
                            <div class="row" style="justify-content: center;">
                                {% for espaco in page %}
                                <!-- <div class="col-md-{% if page.num_items == 3 %}4{% elif page.num_items == 2 %}6{% else %}12{% endif %}" -->
                                <div class="col-md-4">
                                    <a class='btn btn-outline-light btn-lg botao_escolher_espaco' role="button"
                                        onclick="selecionar(this)" id="espaco_{{espaco.id_espaco}}">
                                        <!-- style="max-height:15vw; max-width:15vw;" -->
                                        <img src="{{espaco.get_image_url}}" alt="Image" style="max-width:100%;">
                                            <!-- style="max-height:15vw; max-width:15vw;"> -->
                                        <br>
                                        <p>{% translate "Escolher" %}</p>
                                    </a>
                                    <div style="text-align: center;">
                                        <p>{{espaco}}</p>
                                        <p>{{espaco.get_preco}} {% translate "/hr" %}</p>
                                        <p>{% translate "Capacidade: " %}{{espaco.vagas}} {% translate "pessoas" %}</p>
                                        <input type="hidden" id="vagas_{{espaco.id_espaco}}" class="" value="{{espaco.vagas}}">
                                    </div>
                                </div>
                                {% endfor %}
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
                <hr>
            </div>
    
        </div>
    </div>
</div>
</section>

{% if compartilhado == 1 %}
<section id="agendar_sala" style='padding-top: 0.5%; padding-bottom: 0%;'>

  <div class="container align-items-center" style="text-align: center;">
      <div class="row">
          <button class="btn {{ button_color }}" type="button" data-toggle="collapse" data-target="#collapseEscolherVagas"
              aria-expanded="true" aria-controls="collapseEscolherVagas">
              {% translate "Escolher Quantidade de Reservas" %}
          </button>
      </div>
  
      <div class="collapse" id="collapseEscolherVagas">
        <div class="row d-flex align-items-center justify-content-center">
          <fieldset data-quantity style='margin-top: 1%;'></fieldset>
            <legend>{% translate "Reservas" %}</legend>
          <!-- </fieldset> -->
          <div>
            <button class="btn btn-danger" type="submit" style="margin-bottom: 2%;" onclick="selecionar_vagas(this)">
              {% translate "Atualizar" %}</button>
          </div>
          
          <script>

            // let contador = document.getElementsByTagName("quantity")[0][0];
            // let contador = $('[name="quantity"]')[0];
            // let fieldset = document.querySelectorAll('[data-quantity]');
            // fieldset.addEventListener("change", e => {
            //   let contador = $('[name="quantity"]')[0];
            //   console.log(contador.value);
            // });
            // alert(contador);
            function updater(quantity) {
              // console.log(quantity);
              if (quantity instanceof Event)
                var valor = quantity.target.value;
              else
                var valor = quantity;
              // $('#quantidade_reservada')[0].value = valor;
              // if (this.value < 1)
              // this.value = 1;
              // if (this.value > get_vagas_atual())
              // this.value = get_vagas_atual();
              // console.log(window.quantidade_vagas);
              if (valor < 1)
              $('input[name="quantity"]')[0].value = 1;
              if (valor > get_vagas_atual())
              $('input[name="quantity"]')[0].value = get_vagas_atual();
              $('#quantidade_reservada')[0].value = valor;
            };
            
          </script>

          <script>

            function get_vagas_atual(){
              return $('.vagas_max_atual')[0].value
            }

            $('body').delegate('input[name="quantity"]', 'change', function() {
              console.log(this.value);
              if (this.value < 1)
              this.value = 1;
              if (this.value > get_vagas_atual())
              this.value = get_vagas_atual();
              $('#quantidade_reservada')[0].value = this.value;
            });
            // function botao_mudou(){
            //   console.log(this);
            //   // $('input[name="quantity"]')
            // }

            function selecionar_vagas(this_botao){
              // var quantidade_reservada = $('#quantidade_reservada')[0].value;
              // window.calendar()
              if (window.calendar){
                delete_events_except_allday_ones();
                fetch_day_events();
              }
            }
          </script>
        </div>
      </div>
      
  </div>
</section>
{% endif %}



<section id="agendar_sala" style='padding-top: 0.5%; padding-bottom: 0%;'>

    <div class="container align-items-center" style="text-align: center;">
        <div class="row">
            <button class="btn {{ button_color }}" type="button" data-toggle="collapse" data-target="#collapseEscolherHorario"
                aria-expanded="true" aria-controls="collapseEscolherHorario">
                {% translate "Escolher Horário" %}
            </button>
        </div>
    
        <div class="collapse" id="collapseEscolherHorario">
            <!--Inicio Calendário -->
            <div class="row">
                <div class="col-md-12" style='padding-top: 0.5%; padding-bottom: 0%; margin-bottom: 8%;'>
                    <p id='calendar_inner_text'>{% translate "Calendário não iniciado. Escolha um espaço primeiro." %}</p>
                    <div id="calendar">
                    </div>
                </div>
            </div>
            <!-- Fim Calendário -->
        
            <!--Inicio Modal -->
            <div class="modal fade show" id="eventModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
                aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header bg-primary">
                            <h5 class="modal-title text-white" id="exampleModalLongTitle">{% translate "Novo agendamento" %}
                            </h5>
                            <button id="modalClose1" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <form method="post">
                            {% csrf_token %}
                            <div class="modal-body">
                                <div class="form-group">
        
        
                                </div>
                                <div class="form-group">
                                    <div class="row d-flex align-items-center">
                                        <label for="message-text" class="col-form-label" style="font-size: 20px;">{% translate "Dia:" %}</label>
                                        <h1 class="col-form-label card-title" id="datepicker-data" style="font-size: 20px;">
                                        </h1>
                                        <input type="hidden" id="data-reserva" name="data-reserva" value="">
                                        <input type="hidden" id="id_espaco" name="id_espaco" value="">
                                        <input type="hidden" id="quantidade_reservada" name="quantidade_reservada" value="1">
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="form-group col-lg-6 ">
                                            <label for="message-text" class="col-form-label">{% translate "Hora de entrada:"%}</label>
                                            <!-- {{ form.hora_entrada }} -->
                                            <!-- <div id="datepicker-hora-entrada" value=""></div> -->
                                            <input type="time" id="hora-entrada" name="hora-entrada" value=""
                                                class="form-control timepicker">
                                        </div>
                                        <div class="form-group col-lg-6">
                                            <label for="message-text" class="col-form-label">{% translate "Hora de saída:"%}</label>
                                            <!-- {{ form.hora_saida }} -->
                                            <input type="time" id="hora-saida" name="hora-saida" value=""
                                                class="form-control timepicker">
                                            <!-- <div id="datepicker-hora-saida" value=""></div> -->
                                        </div>
                                        {% if hasErrors == True %}
                                        <script>
                                            alert("{{ error }}");
                                        </script>
                                        {% endif %}
        
                                    </div>
        
                                </div>
        
        
                            </div>
                            <div class="modal-footer">
                                <button id="modalClose2" type="button" class="btn btn-danger">{% translate "Fechar" %}</button>
                                <button id="modalClose3" type="submit" class="btn {{ button_color  }}">{% translate "Salvar"%}</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Fim Modal -->
    </div>
</section>
<section id="controle-dos-passos" style='padding-top: 0.5%; margin-bottom: 1%;'>
    <div class="container">
        <!-- <div class="row" style="margin-left: 7.5%; margin-top: 3%;"> -->
        <div class="row">
            <p class="card-text d-flex justify-content-left">{% translate "Passo 2 de 3"%}</p>
            <a href="{% host_url 'reserva' host 'custom_host' domain %}" class="btn btn-sm {{ button_color }} animate__animated animate__fadeInUp scrollto col-lg-2 col-md-6"> ← {% translate "VOLTAR" %} </a>
        </div>
    </div>
</section>


{% endblock content %}

{% block js %}

<!-- Contador -->
<script src="{% static 'js/counter.js' %}"></script>

<!-- Inicio Full Calendar Script -->
<script src="{% static 'js/fullcalendar.js' %}"></script>
<!-- <script>
    var calendar;
</script> -->
<script>
    function getMonthFromInfo(info) {
        var date = new Date(info.end);
        date.setMonth(date.getMonth() - 1);
        return `${date.getFullYear()}-${date.getMonth() + 1}`;
    }

    function hasClass(element, className) {
        return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
    }

    function get_id_espaco() {
        selecionado = document.getElementsByClassName('botao_escolher_espaco active')[0];
        return selecionado.id.split('_')[1];
    }

    function delete_events_except_allday_ones(){
      events = calendar.getEvents();
      for(let i = 0; i < events.length; i++){
        if (!events[i].allDay){
          events[i].remove()
        }
      }
    }

    function fetch_day_events(){
      var current_date = calendar.view.currentStart.toISOString().split('T')[0];
      // var id_cliente = '{{cliente_id}}';
      var quantidade_reservada = $('#quantidade_reservada')[0].value;
      fetch(`/api/reserva_event/${current_date}/{{cliente_id}}/${get_id_espaco()}/${quantidade_reservada}/?format=json`)
      .then(function (response) {
        return response.json()
      })
      .then(function (json) {
        if (json != {} && json.event_list != undefined){
          json.event_list.forEach(evento => {
            calendar.addEvent(evento)
          });
        }
      })
      .catch(function (e){
        console.log(e);
        alert('{% translate "Não foi possível ler as reservas do dia" %}');
      })
    }

    function criar_calendario () {
        var calendarEl = document.getElementById('calendar');
        try{
            calendarEl.destroy();
        } catch(e){}
        
        var today = new Date();
        today.setHours(0);
        today.setMinutes(0);
        today.setSeconds(0);

        // HORÁRIO COMERCIAL DO COWORKING
        businessHours = [{
            // days of week. an array of zero-based day of week integers (0=Sunday)
            daysOfWeek: [1, 2, 3, 4, 5], // Monday - Friday

            startTime: '07:00', // a start time (10am in this example)
            endTime: '22:00', // an end time (6pm in this example)
        },
        {
            daysOfWeek: [6, 0], // Saturday, Sunday

            startTime: '09:00', // a start time (10am in this example)
            endTime: '19:00', // an end time (6pm in this example)
        }]

        // CONFIGURAÇÕES DE MUDANÇA DE CADA VIEW
        changeToMonth = function (info) {
            calendar.changeView('dayGridMonth', info.dateStr);
            calendar.setOption('eventDisplay', 'background');
            calendar.setOption('selectable', 'false');
        }
        changeToDay = function (info) {
            calendar.changeView('timeGridDay', info.dateStr);
            calendar.setOption('eventDisplay', 'list-item');
            calendar.setOption('selectable', 'true');
        }

    window.calendar = new FullCalendar.Calendar(calendarEl, {
      
      customButtons: {
        month: {
          text: 'Mês',
          click: changeToMonth,
          color: '#74b9ff'
        }, 
        day: {
          text: 'Dia',
          click: changeToDay
        }
      },
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'month,day'
      },
      allDaySlot: false,
      eventDisplay: 'background',
      eventColor: '#74b9ff',
      initialDate: today,
      navLinks: false,
      selectable: true,
      selectMirror: false,
      eventStartEditable: false,
      businessHours: businessHours,
      selectConstraint: "businessHours",

      select: function(arg) {
          
          function getTime(date){
            return date.toTimeString().split(" ")[0];
          }
          var modal = document.getElementById('eventModal')
          modal.style.display = 'block'
          const datepickerDate = document.getElementById('datepicker-data');
          dataReserva = `${arg.start.getDate()}/${(arg.start.getMonth()+1) < 10 ? '0' + (arg.start.getMonth()+1) : arg.start.getMonth()+1}/${arg.start.getFullYear()}`
          
          datepickerDate.textContent = dataReserva
          document.getElementById('data-reserva').value = dataReserva
          document.getElementById('hora-entrada').value = getTime(arg.start)
          document.getElementById('hora-saida').value = getTime(arg.end)
          calendar.unselect()
          
        },
      dateClick: function (info) {
        if (calendar.view.type == 'dayGridMonth') {

          if (!hasClass(info.dayEl, 'fc-day-past')) {
            calendar.changeView('timeGridDay', info.dateStr);
            calendar.setOption('eventDisplay', 'list-item');
          }
          else{
            alert('{% translate "Este dia já passou." %}');
          }
        }
        else{
          // alert(`${info.date.getHours()}:${info.date.getMinutes() == 0 ? '00' : '30'}`);
        }
      },
      eventClick: function(calEvent) {
        if (calendar.view.type == 'dayGridMonth') {
          
        }
        else{
          alert('{% translate "Este horário está reservado!" %}');
        }
        
      },
      datesSet: function(info){
        if (info.view.type == "timeGridDay"){
          // calendar.setOption('visibleRange', function(currentDate) {
          //   return { start: new Date(currentDate.valueOf()) };
          // });
          let dia = `${info.start.getFullYear()}-${info.start.getMonth()}-${info.start.getDate()}`
          let today = new Date()
          let hoje = `${today.getFullYear()}-${today.getMonth()}-${today.getDate()}`
          console.log(info)
          // console.log(info.start);
          // console.log(info.start.getFullYear());
          console.log(dia)
          console.log(hoje)
          
          console.log(dia == hoje)
          if(dia == hoje) { $('.fc-prev-button')[0].setAttribute("disabled","true"); }
          else { $('.fc-prev-button')[0].removeAttribute("disabled"); }
          // else { jQuery('.fc-button-prev').removeClass("fc-state-disabled"); }
          delete_events_except_allday_ones();
          var quantidade_reservada = $('#quantidade_reservada')[0].value;
          fetch(`/api/reserva_event/${info.startStr.split('T')[0]}/{{cliente_id}}/${get_id_espaco()}/${quantidade_reservada}/?format=json`)
            .then(function (response) {
              return response.json()
            })
            .then(function (json) {
              if (json != {} && json.event_list != undefined){
                json.event_list.forEach(evento => {
                  calendar.addEvent(evento)
                });
              }
            })
            .catch(function (e){
              console.log(e);
              alert('{% translate "Não foi possível ler as reservas do dia" %}');
            })
        }
        else{
          // calendar.setOption('visibleRange', {
          //   start: '2020-1-1'
          // });
          past_elements = document.getElementsByClassName('fc-day-past');
          for(let i = 0; i < past_elements.length; i++)
          past_elements[i].classList.add('fc-day-other');

          /* var mes = getMonthFromInfo(info);
          fetch(`/api/month_event/${mes}/{{cliente_id}}/${get_id_espaco()}/?format=json`)
              .then(function (response) {
                return response.json()
              })
              .then(function (json) {
                console.log(json);
                if (json != []){
                  json.forEach(evento => {
                    calendar.addEvent(evento);
                    console.log('batata');
                  });
                }
              })
              .catch(function (e) {
                alert('{% translate "Não foi possível ler as reservas do dia" %}');
                failureCallback(e);
              }) */


        }
      },
      dayMaxEvents: true,
      slotLabelFormat: {
        hour: '2-digit',
        minute: '2-digit',
        hour12:false,
      },
      // events: {{ eventos|safe }},
      eventSources: [
        {
          events: function get_month_reservas(info, successCallback, failureCallback) {
            console.log(info);
            var mes = getMonthFromInfo(info);
            return fetch(`/api/month_event/${mes}/{{cliente_id}}/${get_id_espaco()}/?format=json`)
              .then(function (response) {
                return response.json()
              })
              .then(function (json) {
                console.log(json);
                if (json != []){
                  json.forEach(evento => {
                    calendar.addEvent(evento)
                  });
                }
                return json;
              })
              .catch(function (e) {
                alert('{% translate "Não foi possível ler as reservas do dia" %}');
                failureCallback(e);
              })
          }
        }
      ],
      nowIndicator: true,
      eventTimeFormat: { 
        hour: '2-digit',
        minute: '2-digit',
        hour12:false,
      }
    });

      window.calendar.render();
    };

    const closeBtn1 = document.getElementById('modalClose1');
    const closeBtn2 = document.getElementById('modalClose2');
    const closeBtn3 = document.getElementById('modalClose3');
    closeBtn1.addEventListener('click', () => {
        const eventModal = document.getElementById('eventModal')
        eventModal.style.display = 'none';
    });
    closeBtn2.addEventListener('click', () => {
        const eventModal = document.getElementById('eventModal')
        eventModal.style.display = 'none';
    });

    closeBtn3.addEventListener('click', () => {
        const eventModal = document.getElementById('eventModal')

        var datepickerOutput = myDatepicker1.toTimeString();
        var datepickerOutput2 = myDatepicker2.toTimeString();

        document.getElementById("hora-entrada").value = datepickerOutput;
        document.getElementById("hora-saida").value = datepickerOutput2;
    });
</script>


<script>
    function selecionar(botao){
      '/* lógica de desativar antigo */'
        console.log(botao);
        if (document.getElementsByClassName('botao_escolher_espaco active')[0]){
            let botao_ativo = document.getElementsByClassName('botao_escolher_espaco active')[0];
            botao_ativo.classList.remove('active');
            botao_ativo.classList.add('btn-outline-light');
            botao_ativo.classList.remove('{{ button_color }}');
            botao_ativo.children[2].innerHTML = '{% translate "Escolher" %}';
            input_vagas_max = document.getElementsByClassName('vagas_max_atual')[0]
            if (input_vagas_max != undefined)
            input_vagas_max.classList.remove('vagas_max_atual');
        }

        '/* lógica de ativar novo */'
        botao.classList.add('active');
        botao.classList.remove('btn-outline-light');
        botao.classList.add('{{ button_color}}');
        botao.children[2].innerHTML = '{% translate "Escolhido" %}';
        $('#collapseEscolherHorario').collapse('show');
        document.getElementById('calendar_inner_text').innerText = '';
        let id_espaco = get_id_espaco();
        document.getElementById('id_espaco').value = id_espaco;
        criar_calendario();
        
        document.getElementById(`vagas_${id_espaco}`).classList.add('vagas_max_atual');
        let vagas = get_vagas_atual(); // Não trocar a ordem com a linha de cima!! (tem que rodar nesta ordem)
        if (vagas < $('input[name="quantity"]')[0].value){
          $('input[name="quantity"]')[0].value = vagas;
          $('#quantidade_reservada')[0].value = vagas;
        }
        
    }

    // function selecionar_vagas(thisbotao){
    //   console.log(window.quantidade_vagas)
    // }

    $('#collapseEscolherHorario').on('shown.bs.collapse', 
    function (e) {
      try{
        window.calendar.updateSize();
      } catch (error){
        // Se acontecer de dar um TypeError é porque a página ainda não carregou o calendário
        // e este é um comportamento esperado.
        if (error != TypeError){
          throw error;
        }
      }
    })

</script>
{% endblock js %}