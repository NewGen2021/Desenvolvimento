# Generated by Django 3.2.6 on 2021-10-01 20:06

from django.contrib.auth.models import User

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdvertenciasModel',
            fields=[
                ('id_advertencias', models.AutoField(primary_key=True, serialize=False)),
                ('comentario', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'advertencias',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClienteModel',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=60)),
                ('cpf_cnpj', models.CharField(max_length=20, verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('O', 'Outro')], max_length=2, null=True, verbose_name='Genero')),
                ('email', models.EmailField(max_length=40, verbose_name='E-mail')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('logradouro', models.CharField(max_length=45)),
                ('numero', models.IntegerField()),
                ('bairro', models.CharField(max_length=35)),
                ('cidade', models.CharField(max_length=30)),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PE', 'Pernanbuco'), ('PI', 'Piauí'), ('PR', 'Paraná'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'São Paulo'), ('TO', 'Tocantins')], max_length=2)),
                ('cep', models.CharField(max_length=9)),
                # ('senha', models.CharField(max_length=120, validators=[django.core.validators.MinLengthValidator(6)])),
            ],
            options={
                'db_table': 'cliente',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ConvidadosModel',
            fields=[
                ('id_convidado', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=40, verbose_name='E-mail')),
            ],
            options={
                'db_table': 'convidados',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EquipamentosModel',
            fields=[
                ('id_equipamento', models.AutoField(primary_key=True, serialize=False)),
                ('tipo', models.CharField(max_length=20)),
                ('descrição', models.CharField(max_length=100)),
                ('preco', models.FloatField()),
                ('status_equipamento', models.IntegerField(choices=[('0', 'Ativo'), ('1', 'Desativado'), ('2', 'Extraviado')])),
                ('data_ultima_alteracao', models.DateTimeField()),
            ],
            options={
                'db_table': 'equipamentos',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EspacosModel',
            fields=[
                ('id_espaco', models.AutoField(primary_key=True, serialize=False)),
                ('status_espaco', models.IntegerField(blank=True, null=True)),
                ('vagas', models.IntegerField(blank=True, null=True)),
                ('data_ultima_alteracao', models.DateTimeField(blank=True, null=True)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='')),
                ('preco', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'espacos',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FuncionariosModel',
            fields=[
                ('id_funcionario', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=60)),
                ('cpf_cnpj', models.CharField(max_length=14, verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True)),
                ('genero', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('O', 'Outro')], max_length=2, null=True, verbose_name='Genero')),
                ('email', models.EmailField(max_length=40, verbose_name='E-mail')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('logradouro', models.CharField(max_length=45)),
                ('numero', models.IntegerField()),
                ('bairro', models.CharField(max_length=35)),
                ('cidade', models.CharField(max_length=30)),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MG', 'Minas Gerais'), ('MS', 'Mato Grosso do Sul'), ('MT', 'Mato Grosso'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PE', 'Pernanbuco'), ('PI', 'Piauí'), ('PR', 'Paraná'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SE', 'Sergipe'), ('SP', 'São Paulo'), ('TO', 'Tocantins')], max_length=2)),
                ('cep', models.CharField(max_length=12)),
                # ('senha', models.CharField(max_length=120, validators=[django.core.validators.MinLengthValidator(6)])),
            ],
            options={
                'db_table': 'funcionarios',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PacotehorasModel',
            fields=[
                ('id_pacote_horas', models.AutoField(primary_key=True, serialize=False)),
                ('qtd_horas', models.IntegerField()),
                ('status_pacotehoras', models.IntegerField()),
            ],
            options={
                'db_table': 'pacoteHoras',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PagamentoModel',
            fields=[
                ('id_pagamento', models.AutoField(primary_key=True, serialize=False)),
                ('metodo', models.CharField(choices=[('PIX', 'PIX'), ('Cartão de Crédito', 'Cartão de Crédito'), ('Boleto', 'Boleto')], max_length=45)),
                ('cod_mercadopago', models.IntegerField()),
                ('status_pagamento', models.IntegerField(choices=[('0', 'Aguardando Pagamento'), ('1', 'Pagamento Aprovado'), ('2', 'Pagamento Negado'), ('3', 'Pacote de Horas'), ('4', 'Cancelado pelo Cliente'), ('5', 'Expirado'), ('6', 'Cancelado via Sistema')])),
                ('datahora_log', models.DateTimeField()),
            ],
            options={
                'db_table': 'pagamento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReservaModel',
            fields=[
                ('id_reserva', models.AutoField(primary_key=True, serialize=False)),
                ('is_aluguel', models.PositiveIntegerField(blank=True, null=True)),
                ('data_reserva', models.DateField()),
                ('hora_entrada', models.TimeField()),
                ('hora_saida', models.TimeField()),
                ('hora_limpeza', models.TimeField()),
                ('datahora_log', models.DateTimeField(blank=True, null=True)),
                ('hora_entrada_real', models.TimeField(blank=True, null=True)),
                ('hora_saida_real', models.TimeField(blank=True, null=True)),
                ('hora_limpeza_real', models.TimeField(blank=True, null=True)),
                ('preco_total', models.FloatField(blank=True, null=True)),
                ('hash_qrcode', models.CharField(max_length=32, blank=True, null=True)),
            ],
            options={
                'db_table': 'reserva',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoespacoModel',
            fields=[
                ('id_tipoespaco', models.AutoField(db_column='id_tipoEspaco', primary_key=True, serialize=False)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True)),
                ('nome', models.CharField(max_length=45)),
                ('tempo_limpeza', models.TimeField(blank=True, null=True)),
                ('preco', models.FloatField(blank=True, null=True)),
                ('data_ultima_alteracao', models.DateTimeField(blank=True, null=True)),
                ('compartilhado', models.PositiveIntegerField()),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'tipoEspaco',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EquipamentoreservaModel',
            fields=[
                ('id_equipamentoreserva', models.AutoField(db_column='id_equipamentoreserva', primary_key=True, serialize=False)),
                ('preco_locacao_equipamento', models.FloatField()),
            ],
            options={
                'db_table': 'equipamentoReserva',
                'managed': True,
            },
        ),
    ]
